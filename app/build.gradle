plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 30

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger()
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.alkempl.rlr"
            minSdk 26
            targetSdkVersion 30

            versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
            versionName "${versionMajor}.${versionMinor}.${versionPatch} build ${versionBuild}"
            buildConfigField "String", "GitHash", "\"${getGitHash()}\""

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

            kapt {
                arguments {
                    arg("room.schemaLocation", "$projectDir/schemas")
                }
            }
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-storage:19.1.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.3.9"
    implementation 'com.github.RaviKoradiya:LiveAdapter:1.3.4'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "com.google.android.material:material:$version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation fileTree(dir: 'C:\\Users\\Alexk\\samsung jar', include: ['*.aar', '*.jar'], exclude: [])
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
//    implementation 'com.google.code.gson:gson:2.9.0'
    kapt "androidx.room:room-compiler:$room_version"
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:29.0.3')

    implementation("com.squareup.moshi:moshi:1.13.0")
    implementation("com.squareup.moshi:moshi-kotlin:1.13.0")
    implementation("com.squareup.moshi:moshi-adapters:1.13.0")
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.13.0'

    implementation 'com.mikhaellopez:circularprogressbar:3.1.0'

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    //    kapt "android.arch.persistence.room:compiler:1.1.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.activity:activity-ktx:1.3.0'
    //androidx.activity:activity-ktx:1.3.0 = minCompileSdk 30
//    implementation 'androidx.room:room-roomx:2.3.0'
//    implementation 'androidx.room:room-common:2.3.0'
//    implementation 'androidx.room:room-ktx:2.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-fitness:20.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.github.BirjuVachhani:locus-android:3.2.1'
}